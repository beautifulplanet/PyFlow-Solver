Metadata-Version: 2.4
Name: pyfoamclone
Version: 0.1.0
Summary: A Python-based synthetic CFD scaffold (non-physical placeholder).
Author: Your Name
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Physics
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: scipy
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: matplotlib; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: coverage; extra == "dev"
Requires-Dist: jsonschema; extra == "dev"
Requires-Dist: radon; extra == "dev"
Provides-Extra: plot
Requires-Dist: matplotlib; extra == "plot"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Provides-Extra: cov
Requires-Dist: pytest-cov; extra == "cov"
Requires-Dist: coverage; extra == "cov"
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# pyfoamclone

Synthetic CFD scaffold: currently generates benchmark-like centerline velocity profiles (Ghia et al. 1982) for testing infrastructure. It does NOT yet solve the Navierâ€“Stokes equations.

## Status (Aug 2025)
- Placeholder solvers (`PyFOAMSolver`, `FinitudeSolver`) emit deterministic synthetic fields.
- Benchmark data centralized in `pyfoamclone/benchmarks/data.py`.
- Roadmap: implement physical discretization, remove synthetic profiles, add residual tracking, CI, and documentation.

## Install
```bash
pip install -e .[dev]
```

## Run Tests
```bash
pytest -q --cov=pyfoamclone --cov-report=term-missing
```

## Continuous Integration
GitHub Actions workflow (`.github/workflows/ci.yml`) runs lint (ruff), mypy, and tests across Python 3.10â€“3.13.

## Code Coverage
Install coverage extras:
```bash
pip install coverage pytest-cov
```
Run with coverage (see above). Target threshold (future): 85% lines.

## Disclaimer
Do not use for scientific or engineering decisions yet. Outputs are synthetic and only intended for test harness development.
