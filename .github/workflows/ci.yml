name: PyFlow CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Ruff (selected rules)
        run: ruff check . || true

  tests:
    strategy:
      matrix:
        python: [ '3.10', '3.11', '3.12' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install (editable)
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests
        run: pytest -q

  benchmark-smoke:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install (editable)
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: Smoke benchmark (timing)
        run: |
          python - <<'PY'
          import time
          from pyflow.config.model import SimulationConfig
          from pyflow.core.ghost_fields import allocate_state
          from pyflow.residuals.manager import ResidualManager
          from pyflow.drivers.simulation_driver import SimulationDriver
          cfg = SimulationConfig(nx=32, ny=32)
          st = allocate_state(cfg.nx, cfg.ny)
          drv = SimulationDriver(cfg, st, ResidualManager())
          t0 = time.time(); steps=20
          for _ in range(steps):
              next(drv.run(max_steps=1))
          dt = time.time()-t0
          print(f"BENCH: {steps} steps in {dt:.3f}s")
          PY
